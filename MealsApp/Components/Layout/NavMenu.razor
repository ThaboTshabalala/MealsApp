@using MealsApp.Authentication
@inject AuthenticationStateProvider AuthStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid justify-content-center" >
        <a class="navbar-brand" href=""> 
            <img src="logo1.jpg" class ="logo"/> 
            <div>Food App</div>
        </a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <AuthorizeView>
            <Authorized>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="meals">
                <span class="bi bi-cookie-nav-menu" aria-hidden="true"></span> Meals
            </NavLink>
        </div>

         <div class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="Logout" style="cursor:pointer">
                        <span class="bi-box-arrow-in-left-nav-menu" 
                        aria-hidden="true"></span> Logout
            </NavLink>
            </div>
            </Authorized>
            <NotAuthorized>
            <div class="nav-item px-3">
                    <NavLink class="nav-link" @onclick="Login" style="cursor:pointer">
                        <span class="bi-box-arrow-in-right-nav-menu"
                        aria-hidden="true"></span> Login..
                </NavLink>
            </div>
            </NotAuthorized>
        </AuthorizeView>

      
    </nav>
</div>

@code{
    private  async Task Login()
    {
        //Type Casting
        var authStateProvider = (CustomAuthStateProvider)AuthStateProvider;
        await authStateProvider.LogInAsync();
    }
    private  void Logout()
    {
        //Type Casting
        var authStateProvider = (CustomAuthStateProvider)AuthStateProvider;
         authStateProvider.Logout();
    }
}
